{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\IdeaProjects\\\\BankProjects\\\\SwiftBicCode\\\\react-20210621T152505Z-001\\\\react\\\\src\\\\context\\\\firebase\\\\FirebaseState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport { FirebaseContext } from './firebaseContext';\nimport { firebaseReducer } from './firebaseReducer';\nimport { ADD_NOTE, FETCH_NOTES, FETCH_COUNTRY, REMOVE_NOTE, SHOW_LOADER } from '../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = process.env.REACT_APP_DB_URL;\nexport const FirebaseState = ({\n  children\n}) => {\n  _s();\n\n  const initialState = {\n    notes: [],\n    loading: false\n  };\n  const [state, dispatch] = useReducer(firebaseReducer, initialState);\n\n  const showLoader = () => dispatch({\n    type: SHOW_LOADER\n  });\n\n  const fetchNotes = async () => {\n    showLoader();\n    const res = await axios.get(`${url}/notes.json`); //console.log('fetchNotes',res.data)\n\n    const payload = Object.keys(res.data).map(key => {\n      return { ...res.data[key],\n        id: key\n      };\n    });\n    dispatch({\n      type: FETCH_NOTES,\n      payload\n    });\n  };\n\n  const addNote = async title => {\n    const note = {\n      title,\n      date: new Date().toJSON()\n    };\n\n    try {\n      const res = await axios.post(`${url}/notes.json`, note); // console.log('addNote',res.data)\n\n      const payload = { ...note,\n        id: res.data.name\n      };\n      dispatch({\n        type: ADD_NOTE,\n        payload\n      });\n    } catch (e) {\n      console.log(\"Error\" + e);\n      throw new Error(e.message);\n    }\n  };\n\n  const removeNote = async id => {\n    await axios.delete(`${url}/notes/${id}.json`);\n    dispatch({\n      type: REMOVE_NOTE,\n      payload: id\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(FirebaseContext.Provider, {\n    value: {\n      showLoader,\n      addNote,\n      removeNote,\n      fetchNotes,\n      loading: state.loading,\n      notes: state.notes\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FirebaseState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = FirebaseState;\n\nvar _c;\n\n$RefreshReg$(_c, \"FirebaseState\");","map":{"version":3,"sources":["C:/Users/User/IdeaProjects/BankProjects/SwiftBicCode/react-20210621T152505Z-001/react/src/context/firebase/FirebaseState.js"],"names":["React","useReducer","axios","FirebaseContext","firebaseReducer","ADD_NOTE","FETCH_NOTES","FETCH_COUNTRY","REMOVE_NOTE","SHOW_LOADER","url","process","env","REACT_APP_DB_URL","FirebaseState","children","initialState","notes","loading","state","dispatch","showLoader","type","fetchNotes","res","get","payload","Object","keys","data","map","key","id","addNote","title","note","date","Date","toJSON","post","name","e","console","log","Error","message","removeNote","delete"],"mappings":"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","sourcesContent":["import React, {useReducer} from 'react'\nimport axios from 'axios'\nimport {FirebaseContext} from './firebaseContext'\nimport {firebaseReducer} from './firebaseReducer'\nimport {ADD_NOTE, FETCH_NOTES, FETCH_COUNTRY,REMOVE_NOTE, SHOW_LOADER} from '../types'\n\nconst url = process.env.REACT_APP_DB_URL\n\nexport const FirebaseState = ({children}) => {\n  const initialState = {\n    notes: [],\n    loading: false\n  }\n  const [state, dispatch] = useReducer(firebaseReducer, initialState)\n  const showLoader = () => dispatch({type: SHOW_LOADER})\n  const fetchNotes = async () => {\n    showLoader()\n    const res = await axios.get(`${url}/notes.json`)\n    //console.log('fetchNotes',res.data)\n\n    const payload = Object.keys(res.data).map(key => {\n      return {\n        ...res.data[key],\n        id: key\n      }\n    })\n\n    dispatch({type: FETCH_NOTES, payload})\n  }\n\n  const addNote = async title => {\n    const note = {\n      title, date: new Date().toJSON()\n    }\n    \n   try {\n      const res = await axios.post(`${url}/notes.json`, note)\n     // console.log('addNote',res.data)\n      const payload = {\n        ...note,\n        id: res.data.name\n      }\n\n      dispatch({type: ADD_NOTE, payload})\n\n    } catch (e) {\n      console.log(\"Error\"+e)\n      throw new Error(e.message)\n    }\n  }\n\n  const removeNote = async id => {\n    await axios.delete(`${url}/notes/${id}.json`)\n\n    dispatch({\n      type: REMOVE_NOTE,\n      payload: id\n    })\n  }\n\n\n  return (\n    <FirebaseContext.Provider value={{\n      showLoader, addNote, removeNote, fetchNotes,\n      loading: state.loading,\n      notes: state.notes\n    }}>\n      {children}\n    </FirebaseContext.Provider>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}