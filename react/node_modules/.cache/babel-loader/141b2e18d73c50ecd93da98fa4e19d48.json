{"ast":null,"code":"import { ADD_NOTE, FETCH_NOTES, REMOVE_NOTE, SHOW_LOADER } from '../types';\nconst handlers = {\n  [SHOW_LOADER]: state => ({ ...state,\n    loading: true\n  }),\n  [ADD_NOTE]: (state, {\n    payload\n  }) => ({ ...state,\n    notes: [...state.notes, payload]\n  }),\n  [FETCH_NOTES]: (state, {\n    payload\n  }) => ({ ...state,\n    notes: payload,\n    loading: false\n  }),\n  [REMOVE_NOTE]: (state, {\n    payload\n  }) => ({ ...state,\n    notes: state.notes.filter(note => note.id !== payload)\n  }),\n  DEFAULT: state => state\n};\nexport const firebaseReducer = (state, action) => {\n  const handle = handlers[action.type] || handlers.DEFAULT;\n  return handle(state, action);\n};","map":{"version":3,"sources":["C:/Users/User/IdeaProjects/BankProjects/SwiftBicCode/react-20210621T152505Z-001/react/src/context/firebase/firebaseReducer.js"],"names":["ADD_NOTE","FETCH_NOTES","REMOVE_NOTE","SHOW_LOADER","handlers","state","loading","payload","notes","filter","note","id","DEFAULT","firebaseReducer","action","handle","type"],"mappings":"AAAA,SAAQA,QAAR,EAAkBC,WAAlB,EAA+BC,WAA/B,EAA4CC,WAA5C,QAA8D,UAA9D;AAEA,MAAMC,QAAQ,GAAG;AACf,GAACD,WAAD,GAAeE,KAAK,KAAK,EAAC,GAAGA,KAAJ;AAAWC,IAAAA,OAAO,EAAE;AAApB,GAAL,CADL;AAEf,GAACN,QAAD,GAAY,CAACK,KAAD,EAAQ;AAACE,IAAAA;AAAD,GAAR,MAAuB,EACjC,GAAGF,KAD8B;AAEjCG,IAAAA,KAAK,EAAE,CAAC,GAAGH,KAAK,CAACG,KAAV,EAAiBD,OAAjB;AAF0B,GAAvB,CAFG;AAMf,GAACN,WAAD,GAAe,CAACI,KAAD,EAAQ;AAACE,IAAAA;AAAD,GAAR,MAAuB,EAAC,GAAGF,KAAJ;AAAWG,IAAAA,KAAK,EAAED,OAAlB;AAA2BD,IAAAA,OAAO,EAAE;AAApC,GAAvB,CANA;AAOf,GAACJ,WAAD,GAAe,CAACG,KAAD,EAAQ;AAACE,IAAAA;AAAD,GAAR,MAAuB,EACpC,GAAGF,KADiC;AAEpCG,IAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYJ,OAAvC;AAF6B,GAAvB,CAPA;AAWfK,EAAAA,OAAO,EAAEP,KAAK,IAAIA;AAXH,CAAjB;AAcA,OAAO,MAAMQ,eAAe,GAAG,CAACR,KAAD,EAAQS,MAAR,KAAmB;AAChD,QAAMC,MAAM,GAAGX,QAAQ,CAACU,MAAM,CAACE,IAAR,CAAR,IAAyBZ,QAAQ,CAACQ,OAAjD;AACA,SAAOG,MAAM,CAACV,KAAD,EAAQS,MAAR,CAAb;AACD,CAHM","sourcesContent":["import {ADD_NOTE, FETCH_NOTES, REMOVE_NOTE, SHOW_LOADER} from '../types'\n\nconst handlers = {\n  [SHOW_LOADER]: state => ({...state, loading: true}),\n  [ADD_NOTE]: (state, {payload}) => ({\n    ...state,\n    notes: [...state.notes, payload]\n  }),\n  [FETCH_NOTES]: (state, {payload}) => ({...state, notes: payload, loading: false}),\n  [REMOVE_NOTE]: (state, {payload}) => ({\n    ...state,\n    notes: state.notes.filter(note => note.id !== payload)\n  }),\n  DEFAULT: state => state\n}\n\nexport const firebaseReducer = (state, action) => {\n  const handle = handlers[action.type] || handlers.DEFAULT\n  return handle(state, action)\n}\n"]},"metadata":{},"sourceType":"module"}