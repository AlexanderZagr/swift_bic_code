{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\IdeaProjects\\\\BankProjects\\\\SwiftBicCode\\\\react-20210621T152505Z-001\\\\react\\\\src\\\\context\\\\accord\\\\AccordbaseState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport { AccordbaseContext } from './accordbaseContext';\nimport { accordbaseReducer } from './accordbaseReducer';\nimport { SELECT_COUNTRY_CODE, ADD_BIC, FETCH_COUNTRY, FETCH_BICSWIFT, SHOW_LOADER } from '../types'; // адрес по которому обращаемся , в файле .env.LOCAl\n// http://ib-tst:8080/auth-accord-idoc \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = process.env.REACT_APP_DB_URL_ACCORD;\nexport const AccordbaseState = ({\n  children\n}) => {\n  _s();\n\n  const initialState = {\n    countries: [],\n    bicswifts: [],\n    countryCode: 0,\n    resultAddBic: '',\n    loading: false\n  };\n  const [state, dispatch] = useReducer(accordbaseReducer, initialState); //\n\n  const showLoader = () => dispatch({\n    type: SHOW_LOADER\n  }); //список стран\n\n\n  const fetchCountries = async () => {\n    showLoader();\n    const res = await axios.get(`${url}/swift/swiftCountry`); //преобразовали результат в payload\n\n    const payload = Object.keys(res.data.result).map(key => {\n      return { ...res.data.result[key],\n        id: key\n      };\n    }); //добавили результат запроса в state  - countries\n\n    dispatch({\n      type: FETCH_COUNTRY,\n      payload\n    });\n  }; //список кодов из ОДБ по поисковому слову bic\n\n\n  const fetchBicSwift = async title => {\n    showLoader();\n    const res = await axios.get(`${url}/swift/swiftBic`, {\n      params: {\n        bic: title\n      }\n    });\n\n    if (res.data.result == null) {\n      res.data.result = [];\n    } // список BIC из ОДБ\n    //const payload=[]\n    //if (!Array.isArray(res.data.result)) {\n    // alert (\"!!!\")\n    //} else {\n\n\n    const payload = Object.keys(res.data.result).map(key => {\n      return { ...res.data.result[key],\n        id: key\n      };\n    }); // }\n    //добавили результат запроса в state  - bicswifts\n\n    dispatch({\n      type: FETCH_BICSWIFT,\n      payload\n    });\n  }; //добавить код в клиент-банк  \n\n\n  const addBic = async newBic => {\n    const res = await axios.post(`${url}/swift/addSwift`, newBic);\n    const payload = { ...newBic,\n      id: res.data.result\n    };\n    dispatch({\n      type: ADD_BIC,\n      payload: payload\n    });\n  }; //Запоминаем выбранную страну в state, чтобы потом добавить ее в  BIC ДЛЯ клиент-банк\n\n\n  const selectCountryCode = async id => {\n    dispatch({\n      type: SELECT_COUNTRY_CODE,\n      payload: id\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(AccordbaseContext.Provider, {\n    value: {\n      showLoader,\n      fetchCountries,\n      fetchBicSwift,\n      addBic,\n      selectCountryCode,\n      loading: state.loading,\n      countries: state.countries,\n      countryCode: state.countryCode,\n      bicswifts: state.bicswifts,\n      resultAddBic: state.resultAddBic\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AccordbaseState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = AccordbaseState;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccordbaseState\");","map":{"version":3,"sources":["C:/Users/User/IdeaProjects/BankProjects/SwiftBicCode/react-20210621T152505Z-001/react/src/context/accord/AccordbaseState.js"],"names":["React","useReducer","axios","AccordbaseContext","accordbaseReducer","SELECT_COUNTRY_CODE","ADD_BIC","FETCH_COUNTRY","FETCH_BICSWIFT","SHOW_LOADER","url","process","env","REACT_APP_DB_URL_ACCORD","AccordbaseState","children","initialState","countries","bicswifts","countryCode","resultAddBic","loading","state","dispatch","showLoader","type","fetchCountries","res","get","payload","Object","keys","data","result","map","key","id","fetchBicSwift","title","params","bic","addBic","newBic","post","selectCountryCode"],"mappings":"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","sourcesContent":["import React, {useReducer} from 'react'\nimport axios from 'axios'\nimport {AccordbaseContext} from './accordbaseContext'\nimport {accordbaseReducer} from './accordbaseReducer'\nimport {SELECT_COUNTRY_CODE,\n  ADD_BIC,\n  FETCH_COUNTRY,\n  FETCH_BICSWIFT, \n  SHOW_LOADER} from '../types'\n\n// адрес по которому обращаемся , в файле .env.LOCAl\n// http://ib-tst:8080/auth-accord-idoc \nconst url = process.env.REACT_APP_DB_URL_ACCORD\n\nexport const AccordbaseState = ({children}) => {\n  const initialState = {\n    countries: [],\n    bicswifts :[],\n    countryCode :0,\n    resultAddBic :'',\n    loading: false\n  }\n  const [state, dispatch] = useReducer(accordbaseReducer, initialState)\n  //\n  const showLoader = () => dispatch({type: SHOW_LOADER})\n\n  //список стран\n  const fetchCountries = async () => {\n    showLoader()\n    const res = await axios.get(`${url}/swift/swiftCountry`)\n    //преобразовали результат в payload\n    const payload = Object.keys(res.data.result).map(key => {\n      return {\n        ...res.data.result[key],\n        id: key\n      }\n    })\n   //добавили результат запроса в state  - countries\n    dispatch({type: FETCH_COUNTRY, payload})\n  }\n\n  //список кодов из ОДБ по поисковому слову bic\n  const fetchBicSwift = async title => {\n   showLoader()\n   const res = await axios.get(`${url}/swift/swiftBic`,{\n      params: {\n        bic: title\n      }\n    })\n\n    if (res.data.result==null){\n      res.data.result=[]\n    }\n   // список BIC из ОДБ\n   //const payload=[]\n   //if (!Array.isArray(res.data.result)) {\n   // alert (\"!!!\")\n   //} else {\n     const payload = Object.keys(res.data.result).map(key => {\n      return {\n        ...res.data.result[key],\n        id: key\n      }\n    })\n // }\n     //добавили результат запроса в state  - bicswifts\n     dispatch({type: FETCH_BICSWIFT, payload})\n    }\n\n\n  //добавить код в клиент-банк  \n  const addBic= async (newBic) => {\n\n     const res = await axios.post(`${url}/swift/addSwift`, newBic)\n           const payload = {\n        ...newBic,\n         id: res.data.result\n      }\n      \n      dispatch({type: ADD_BIC,payload: payload}) \n  }\n\n  //Запоминаем выбранную страну в state, чтобы потом добавить ее в  BIC ДЛЯ клиент-банк\n  const selectCountryCode = async id => {\n     dispatch({\n      type: SELECT_COUNTRY_CODE,\n      payload: id\n    })\n  }\n\n  \n  return (\n    <AccordbaseContext.Provider value={{\n      showLoader,  fetchCountries, fetchBicSwift, addBic,selectCountryCode,\n      loading: state.loading,\n      countries: state.countries,\n      countryCode: state.countryCode,\n      bicswifts :state.bicswifts,\n      resultAddBic :state.resultAddBic\n    }}>\n      {children}\n    </AccordbaseContext.Provider>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}